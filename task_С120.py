"""
Каждый класс реализовать в отдельном модуле, импортируя их в производные модули.
Создать класс Person с полями имя, фамилия, возраст. Добавить конструктор класса.
Создать производный от Person класс Student. Новые поля: номер студенческого билета, зачетная книжка
    (словарь вида предмет: отметка). Определить конструктор, с вызовом родительского конструктора.
    Определить функции добавления отметки в зачетную книжку, получения отметки по предмету,
    форматированной печати всей зачетной книжки. Переопределить метод преобразования в строку для печати
    основной информации (ФИ, возраст, номер студенческого).
Создать производный от Person класс Professor. Новые поля: номер удостоверения, должность, преподаваемые
    предметы (список строк). Определить конструктор, с вызовом родительского конструктора. Определить
    функции изменения должности, добавления и удаления предмета. Переопределить метод преобразования
    в строку для печати основной информации (ФИ, возраст, номер удостоверения, должность).
Создать класс Group. Поля: номер группы, список группы (список экземпляров класса Student), преподаватель-куратор
    (экземпляр класса Professor). Определить конструктор. Переопределить метод преобразования в строку для печати
    всей информации о группе (с использованием переопределения в классах Professor и Student). Переопределить
    методы получения количества студентов функцией len, получения студента/преподавателя по индексу, изменения
    по индексу, удаления по индексу (0 индекс - преподаватель, начиная с 1 - студенты). Переопределить
    операции + и - для добавления или удаления студента из группы. Добавить функцию создания txt-файла и записи
    всей информации в него (в том числе зачетной книжки студентов).
Предусмотреть хотя бы в 3 местах обработку возможных исключений.
В каждом модуле провести подробное тестирование всех создаваемых объектов и функций.
"""